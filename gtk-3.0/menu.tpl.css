/* menu.css: defines everything related to menubars and menuitems and similar list-like things. */
/* Anything menu-like styled in other css files is a bug -
  - most likely legacy definition from clearlooks theme, which should be moved here. */
/* Anything non-menu-like styled here is likewise a bug. */

-ext {
	-x-var-bg-hover:
		radial-gradient( ellipse 110% 50%,
			@menuitem_hover_glaze_glow_center,
			@menuitem_hover_glaze_glow_edge ),
		linear-gradient( to bottom,
			@menuitem_hover_glaze_top,
			@menuitem_hover_glaze_mid-a 50%,
			@menuitem_hover_glaze_mid-b 50%,
			@menuitem_hover_glaze_bot );
}


/* --- menubar on top of the window --- */

menubar {
	border-bottom: 1px @menubar_border_bot solid;
	margin-top: 1px;
	padding: 0 1px;
	-GtkWidget-window-dragging: true;
	background-color: transparent;
	background-image: linear-gradient(to bottom, @menubar_grad_top, @menubar_grad_bot);
}

menubar menuitem {
	border: 1px transparent solid;
	padding: 2px 7px;
	background-color: transparent;
}

/* This only applies to items in menubar itself, not popup windows from there */
menubar menuitem:hover {
	border: 1px @menuitem_hover_border solid;
	border-radius: 3px 3px 0 0;
	color: @menubar_menuitem_hover;
	background-color: @menu_bg;
	background-image:
		-x-var-bg-hover;
}


/* --- Menu popup-window, e.g. dropping down from menubar --- */

/* General structure of popup window from menubar:
	menubar -> menuitem -> window -> [
		decoration,
		menu -> [ arrow.top, menuitem, ..., arrow.bottom ],
		arrow.right ] */

/* XXX: in murrine "menu"-containing window drops shadow, in gtk3 it does not.
	Should not be compositor effect, check gtk3 for options on that. */

menu {
	font-weight: normal;
	background-color: @menu_bg;
	color: @menu_fg;
	padding: 1px;
	border: 0;
}

menu menuitem {
	border: 1px transparent solid;
	padding: 2px 4px;
	background-color: @menu_bg;
}

menu menuitem:hover {
	border-radius: 3px;
	border: 1px @menuitem_hover_border solid;
	color: @theme_selected_fg;
	background-image:
		-x-var-bg-hover;
}

menu menuitem:hover cellview {
	color: @theme_selected_fg;
}

menuitem window decoration {
	border: 1px @menu_border solid;
}

menuitem:disabled,
menuitem:disabled * {
	color: mix (@menu_fg, @menu_bg, 0.6);
	background-color: transparent;
}


/* XXX: menuitem accelerator - not sure where they're used, need to check */

menuitem accelerator:disabled {
	color: mix(@menu_fg, @menu_bg, 0.7);
}

menuitem accelerator {
	color: alpha(@menu_fg, 0.4);
}

menuitem accelerator:hover,
menuitem accelerator:active {
	color: alpha(@menu_fg, 0.3);
}


/* XXX: menu separators - not sure where they're used, need to check */

menu separator,
menuitem separator {
	color: @menu_separator;
	margin: 3px 1px 3px 1px;
	border-bottom: solid 1px @menu_separator;
}


/* XXX: menu/menuitem arrows - not sure where they're used, need to check */

menuitem arrow {
	min-height: 16px;
	min-width: 16px;
	margin-left: 10px;
	color: @menu_controls;
}

menu menuitem arrow:dir(ltr) { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic"); }
menu menuitem arrow:dir(rtl) { -gtk-icon-source: -gtk-icontheme("pan-end-symbolic-rtl"); }
menu arrow.top { -gtk-icon-source: -gtk-icontheme("pan-up-symbolic"); }
menu arrow.bottom { -gtk-icon-source: -gtk-icontheme("pan-down-symbolic"); }

menu arrow:hover {
	border-color: @theme_selected_fg;
	color: shade (@theme_selected_bg, 1.6);
}


/* XXX: menu buttons - not sure where they're used, need to check */

/* menuitem button.flat:hover -ext, */
/* menuitem button.flat:active -ext { */
/* 	-x-same-rules: menubar menuitem:hover; */
/* } */

menu button {
	background-image: none;
	background-color: @menu_bg;
	color: @internal_element;
	border: 0;
}

menu button:hover {
	background-image: none;
	background-color: @theme_base;
	color: @theme_text;
	border: 0;
}

menu button:disabled {
	background-color: @theme_base;
	color: lighter(@internal_element);
	border: 0;
}

menuitem button.flat:hover {
	border-width: 1px;
	border-radius: 0px;
}

menuitem button.flat:focus {
	color: @theme_text;
}

menuitem button.flat:active {
	color: @theme_text;
	background-image: none;
	background-color: @menu_bg;
	border-radius: 5px 5px 0 0;
	border-image: none;
	border-width: 1px 1px 0 1px;
	border-color: shade(@border, 1.30);
	border-style: solid;
}


/* --- menuitem-embedded elements --- */

menuitem check,
menuitem radio,
menuitem check:hover,
menuitem radio:hover,
menuitem check:disabled,
menuitem radio:disabled
menu menuitem .check,
menu menuitem .radio,
menu menuitem .check:hover,
menu menuitem .radio:hover,
menu menuitem .check:checked,
menu menuitem .radio:checked,
menu menuitem .check:disabled,
menu menuitem .radio:disabled {
	background-image: none;
	background-color: transparent;
	min-height: 16px;
	min-width: 16px;
	padding-left: 2px;
	padding-right: 2px;
}

/* unchecked */
menu menuitem check {
	-gtk-icon-source: url("img/checkbox-unchecked.svg");
}

menu menuitem check:disabled {
	-gtk-icon-source: url("img/checkbox-unchecked-insensitive.svg");
}

/* menu menuitem check:hover {
	-gtk-icon-source: url("img/checkbox-unchecked.svg");
} */

/* checked */
menu menuitem check:checked {
	-gtk-icon-source: url("img/checkbox-checked.svg");
}

menu menuitem check:checked:active {
	-gtk-icon-source: url("img/checkbox-checked-active.svg");
}

menu menuitem check:checked:disabled,
menu menuitem check:active:disabled {
	-gtk-icon-source: url("img/checkbox-checked-insensitive.svg");
}

/* menu menuitem check:checked:hover,
menu menuitem check:active:hover {
	-gtk-icon-source: url("img/checkbox-checked.svg");
} */

/* mixed */
menu menuitem check:indeterminate {
	-gtk-icon-source: url("img/checkbox-mixed.svg");
}

menu menuitem check:indeterminate:active {
	-gtk-icon-source: url("img/checkbox-mixed-active.svg");
}

menu menuitem check:indeterminate:disabled {
	-gtk-icon-source: url("img/checkbox-mixed-insensitive.svg");
}

/* menu menuitem check:indeterminate:hover {
	-gtk-icon-source: url("img/checkbox-mixed.svg");
} */

/* unchecked */
menu menuitem radio {
	-gtk-icon-source: url("img/radio-unchecked.svg");
}

menu menuitem radio:disabled {
	-gtk-icon-source: url("img/radio-unchecked-insensitive.svg");
}

/* menu menuitem radio:hover {
	-gtk-icon-source: url("img/radio-unchecked.svg");
} */

/* checked */
menu menuitem radio:checked {
	-gtk-icon-source: url("img/radio-checked.svg");
}

menu menuitem radio:checked:active {
	-gtk-icon-source: url("img/radio-checked-active.svg");
}

menu menuitem radio:checked:disabled,
menu menuitem radio:active:disabled {
	-gtk-icon-source: url("img/radio-checked-insensitive.svg");
}

/* menu menuitem radio:checked:hover,
menu menuitem radio:active:hover {
	-gtk-icon-source: url("img/radio-checked.svg");
} */

/* mixed */
menu menuitem radio:indeterminate {
	-gtk-icon-source: url("img/radio-mixed.svg");
}

menu menuitem radio:indeterminate:active {
	-gtk-icon-source: url("img/radio-mixed-active.svg");
}

menu menuitem radio:indeterminate:disabled {
	-gtk-icon-source: url("img/radio-mixed-insensitive.svg");
}

/* menu menuitem radio:indeterminate:hover {
	-gtk-icon-source: url("img/radio-mixed.svg");
} */



/* --- treeview --- */


treeview, list {
	background-color: @theme_base;
	color: @theme_text;
}

treeview {
	background-color: @theme_base;
	color: @theme_text;
	-GtkTreeView-vertical-separator: 0;
	-GtkTreeView-expander-size: 13;
	-GtkTreeView-grid-line-width: 0;
	-GtkTreeView-grid-line-pattern: '';
	-GtkTreeView-tree-line-width: 0;
	-GtkTreeView-tree-line-pattern: '';
}

treeview:selected {
	background-color: @theme_selected_bg;
	color: @theme_selected_fg
}

treeview:disabled {
	background-color: @insensitive_bg;
	color: @insensitive_fg;
}

treeview.dnd {
	border-color: @internal_element;
	border-radius: 2px;
	border-width: 1px;
	border-style: solid;
}

/* column-headers */
treeview header button {
	min-height: 22px;
	color: @internal_element;
}

treeview header button,
treeview header button:disabled,
treeview header button:hover,
treeview header button:focus:hover {
	background-color: @theme_base;
	background-image: -gtk-gradient (linear,
	                  left top,
	                  left bottom,
	                  from (@column_header_button_gradient_a),
	                  color-stop (0.50, @column_header_button_gradient_b),
	                  color-stop (0.50, @column_header_button_gradient_c),
	                  to (@column_header_button_gradient_d));
	padding: 0 4px;
	font-weight: normal;
}

treeview header button:disabled {
	background-color: @insensitive_bg;
}

treeview header button:hover,
treeview header button:focus:hover,
treeview header button:focus:hover:active,
treeview header button:hover:active,
treeview header button:checked,
treeview header button:checked:hover {
	color: @internal_element_hover;
}

treeview header button:checked,
treeview header button:checked:hover,
treeview header button:checked:hover:focus {
	background-color: @entry_bg;
	background-image: none;
}

treeview header button,
treeview header button:focus,
treeview header button:checked,
treeview header button:checked:hover,
treeview header button:focus:checked,
treeview header button:focus:hover:active {
	border-image: none;
	border-width: 1px;
	border-radius: 0;
	border-style: solid;
	border-color: @column_header_border_top @column_header_border_right
	              @column_header_border_bottom @column_header_border_left;
}

treeview header button:last-child,
treeview header button:last-child:focus,
treeview header button:last-child:checked,
treeview header button:last-child:hover:active,
treeview header button:last-child:active:focus {
	border-right: none;
}


row,
row:focus {
	min-height: 22px;
}

row:hover,
row:disabled,
row:selected,
row:selected:focus {
	border-width: 0;
}

row:selected,
row:selected:focus,
.cell:selected,
row:selected:hover,
row:selected:focus:hover,
.cell:selected:hover {
	background-image:
		-x-var-bg-hover;
}

row:hover,
row:hover:focus,
.cell:hover {
	background-image:
		-x-var-bg-hover;
}

.cell {
	color: @theme_text;
	padding: 2px;
	border-width: 0;
}

.cell:selected {
	color: @theme_selected_fg;
}
